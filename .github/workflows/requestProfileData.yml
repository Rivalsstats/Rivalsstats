# This is a basic workflow to help you get started with Actions

name: request Profile Data

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  schedule:
    - cron: "0 */6 * * *"  # Runs every 6 hours (at minute 0)

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    env:
      BASE_URL: "https://mrapi.org/api/"
      STATS_URL: "player/"
      USERS_TO_CHECK: '["258927695"]'  # Define user IDs as a JSON array

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v4

      - name: Fetch Marvel Rivals Stats
        run: |
          USERS=$(echo '${{ env.USERS_TO_CHECK }}' | jq -r '.[]')
          for USER in $USERS; do
            echo "Fetching data for user: $USER"
            curl -X GET "${BASE_URL}${STATS_URL}${USER}" \
              -H "x-api-key: ${API_TOKEN}" \
              -o "data/latest/users/${USER}.json"
          done

      - name: Print JSON File Content
        run: |
          USERS=$(echo '${{ env.USERS_TO_CHECK }}' | jq -r '.[]')
          for USER in $USERS; do
            echo "Contents of data/latest/users/${USER}.json:"
            cat "data/latest/users/${USER}.json"
          done
          
      - name: Merge with historical data
        run: |
          USERS=$(echo '${{ env.USERS_TO_CHECK }}' | jq -r '.[]')
          for USER in $USERS; do
            echo "Merging data for user: $USER"
            USER_TO_CHECK=$USER
            python merge_stats.py "$USER"
          done

      - name: Commit and push changes
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add data/
          git commit -m "Updated Users: ${USERS_TO_CHECK}"
          git push
     
